// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Store {
  id     String @id @default(cuid())
  name   String @unique
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  billboards Billboard[]
  categories Category[]
  Size       Size[]
  Color      Color[]
  Product    Product[]
}

model Billboard {
  id       String @id @default(cuid())
  storeId  String
  label    String @unique
  imageUrl String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  store      Store      @relation(fields: [storeId], references: [id])
  categories Category[]
}

model Category {
  id          String    @id @default(cuid())
  storeId     String
  name        String    @unique
  billboardId String
  billboard   Billboard @relation(fields: [billboardId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  store   Store     @relation(fields: [storeId], references: [id])
  Product Product[]
}

model Size {
  id      String @id @default(cuid())
  storeId String
  store   Store  @relation(fields: [storeId], references: [id])

  name  String @unique
  value String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
}

model Color {
  id      String @id @default(cuid())
  storeId String
  store   Store  @relation(fields: [storeId], references: [id])

  name  String @unique
  value String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
}

model Image {
  id        String  @id @default(cuid())
  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  url       String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id         String   @id @default(cuid())
  storeId    String
  store      Store    @relation(fields: [storeId], references: [id])
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])
  name       String
  price      Decimal
  isFeatured Boolean  @default(false)
  isArchived Boolean  @default(false)
  sizeId     String
  size       Size     @relation(fields: [sizeId], references: [id])
  colorId    String
  color      Color    @relation(fields: [colorId], references: [id])
  Image      Image[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
